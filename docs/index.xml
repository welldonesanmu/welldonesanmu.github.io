<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sanmu</title>
    <link>https://welldonesanmu.github.io/</link>
    <description>Recent content on Sanmu</description>
    <image>
      <title>Sanmu</title>
      <url>https://welldonesanmu.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://welldonesanmu.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 10 May 2024 16:55:48 +0800</lastBuildDate><atom:link href="https://welldonesanmu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5_10_字节一面</title>
      <link>https://welldonesanmu.github.io/posts/%E5%AD%97%E8%8A%82%E4%B8%80%E9%9D%A2/</link>
      <pubDate>Fri, 10 May 2024 16:55:48 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/%E5%AD%97%E8%8A%82%E4%B8%80%E9%9D%A2/</guid>
      <description>论文相关
详细实现（需要重新整理一版） 如果Graph Diffusion技术里 θ_k相当于是随机游走的概率因子的话，那和GraphSAGE有什么区别？ Loss是怎么实现的？和NCELoss的区别？ 两篇文章的区别是什么？ 对比视图的anchor选取？正负样本生成数量比例？ 对比学习常用的Loss是什么？ 使用Transformer去抽取图表征是否可行？ 了解GraphTransformer吗？ 推荐系统以及项目相关
推荐系统的架构实现是什么？ 召回层常用的什么算法？ Graph embedding怎么用在推荐上面的？ 在各个阶段，图神经网络怎么应用？ 召回层除了局部敏感哈希外还有什么方法加速召回？ AUC曲线的物理意义？AUC越高越好那么超过多少算是越高？ 说一下DIN的结构？ 项目中提到的会在排序层加入组合类别的神经网络，具体讲一下？ 手撕
使用rand5实现rand7。 给出一个数组，求出其中的逆序对个数；输出个数，数组中数字小于100000。 反问
部门实现推荐系统需要哪些技术栈？答：自研系统，服务端使用C++，模型搭建使用TensorFlow。 模型怎么上线耦合？答：算法工程师不管这个，有部门专门负责。 无Hadoop、Spark，all in算法实现
项目称之为练手
自我评价：C
Timeline：5.7&amp;ndash;5.11（等挂）</description>
    </item>
    
    <item>
      <title>Deep Learning Trick</title>
      <link>https://welldonesanmu.github.io/posts/deep-learning-trick/</link>
      <pubDate>Wed, 19 Apr 2023 20:35:40 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/deep-learning-trick/</guid>
      <description>Trick Epoch：1个epoch等于使用训练集中的全部样本训练一次，通俗的讲几次epoch就是整个数据集被轮几次。
Batch Size：全部数据是分批来训练的，批的大小称为Batch Size。
iteration：1个iteration等于使用batchsize个样本训练一次，也就是说训练一批的样本，称为一次迭代。
比如训练集有500个样本，batchsize = 10 ，那么训练完整个样本集：iteration=50，epoch=1。
batch: 深度学习每一次参数的更新所需要损失函数并不是由一个数据获得的，而是由一组数据加权得到的，这一组数据的数量就是batchsize。
batchsize最大是样本总数N，此时就是Full batch learning；最小是1，即每次只训练一个样本，这就是在线学习（Online Learning）。当我们分批学习时，每次使用过全部训练数据完成一次Forword运算以及一次BP运算，成为完成了一次epoch。
有17种trick可以有效缩短运行时间：</description>
    </item>
    
    <item>
      <title>English writing</title>
      <link>https://welldonesanmu.github.io/posts/english_writing/</link>
      <pubDate>Wed, 12 Apr 2023 15:02:38 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/english_writing/</guid>
      <description>Notes Move 1 Establishing a research territory Move 2 Establishing a niche Move 3 Presenting the present work </description>
    </item>
    
    <item>
      <title>2023.4.11</title>
      <link>https://welldonesanmu.github.io/posts/2023.4.11/</link>
      <pubDate>Tue, 11 Apr 2023 23:46:38 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/2023.4.11/</guid>
      <description>是你吗？ 今天给我的感觉已经像是触摸在云层中的样子了，可能是可能不是，可能触碰可能没有触碰，可能只剩下了一种阳光下开心微笑的剪影，也可能是Creep在心中回荡。
是真实的吗？
是虚假的吗？
现在愈发能感觉到Eason病态三部曲的滋味，WEIRDO WEIRDO WEIRDO。
很多东西都是纸里包着的一层，无论是身旁的人还是周围的人。
所以
是你吗？
还是自己吗？
4-11于深夜。</description>
    </item>
    
    <item>
      <title>Picture</title>
      <link>https://welldonesanmu.github.io/posts/picture/</link>
      <pubDate>Tue, 11 Apr 2023 10:36:40 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/picture/</guid>
      <description>This is the instruction about picture embed. </description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://welldonesanmu.github.io/posts/git/</link>
      <pubDate>Mon, 10 Apr 2023 14:36:09 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/git/</guid>
      <description>Git 推送的用法及常见指令 echo &amp;ldquo;# Blog&amp;rdquo; &amp;raquo; README.md git init git add README.md git commit -m &amp;ldquo;first commit&amp;rdquo; git branch -M main git remote add origin git@github.com:welldonesanmu/Blog.git git push -u origin main
.md 文件换行：在每一行的末尾加上 &amp;ldquo;&amp;quot; ,然后再回车键。
新增了一个脚本，用于每次添加完之后自动deploy.</description>
    </item>
    
    <item>
      <title>2023.4.9</title>
      <link>https://welldonesanmu.github.io/posts/2023.4.9/</link>
      <pubDate>Sun, 09 Apr 2023 23:21:57 +0800</pubDate>
      
      <guid>https://welldonesanmu.github.io/posts/2023.4.9/</guid>
      <description>认识她的第9天 今天晚上看了电影，但是没有发给她，只在朋友圈发了一条复旦新闻馆动态，像预想的一样，没有收到任何评论和点赞。我深深呼吸了一口气，都是好事啦。</description>
    </item>
    
    <item>
      <title></title>
      <link>https://welldonesanmu.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://welldonesanmu.github.io/about/</guid>
      <description></description>
    </item>
    
    
  </channel>
</rss>
